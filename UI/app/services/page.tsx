"use client"

import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Heart, Clock, Users, CheckCircle, Star, ArrowRight, Sparkles } from "lucide-react"
import Link from "next/link"
import Header from "@/components/header"
import Footer from "@/components/footer"

export default function ServicesPage() {
  const services = [
    {
      id: "home-regular",
      title: "D·ªçn Nh√† ƒê·ªãnh K·ª≥",
      description: "D·ªãch v·ª• d·ªçn d·∫πp nh√† c·ª≠a ƒë·ªãnh k·ª≥ h√†ng tu·∫ßn, h√†ng th√°ng v·ªõi ƒë·ªôi ng≈© chuy√™n nghi·ªáp",
      icon: "üè†",
      gradient: "from-blue-500 to-cyan-400",
      price: "300.000ƒë - 800.000ƒë",
      duration: "2-4 gi·ªù",
      features: [
        "Lau d·ªçn to√†n b·ªô ph√≤ng kh√°ch, ph√≤ng ng·ªß",
        "V·ªá sinh nh√† b·∫øp v√† thi·∫øt b·ªã",
        "D·ªçn d·∫πp ph√≤ng t·∫Øm, toilet",
        "H√∫t b·ª•i, lau s√†n nh√†",
        "S·∫Øp x·∫øp ƒë·ªì ƒë·∫°c g·ªçn g√†ng",
      ],
      popular: true,
    },
    {
      id: "office",
      title: "D·ªçn VƒÉn Ph√≤ng",
      description: "V·ªá sinh vƒÉn ph√≤ng chuy√™n nghi·ªáp, t·∫°o m√¥i tr∆∞·ªùng l√†m vi·ªác s·∫°ch s·∫Ω v√† tho·∫£i m√°i",
      icon: "üè¢",
      gradient: "from-purple-500 to-pink-400",
      price: "500.000ƒë - 1.200.000ƒë",
      duration: "3-5 gi·ªù",
      features: [
        "V·ªá sinh b√†n l√†m vi·ªác, gh·∫ø ng·ªìi",
        "Lau d·ªçn thi·∫øt b·ªã vƒÉn ph√≤ng",
        "D·ªçn d·∫πp ph√≤ng h·ªçp, khu v·ª±c chung",
        "V·ªá sinh toilet, pantry",
        "ƒê·ªï r√°c v√† thay t√∫i r√°c m·ªõi",
      ],
    },
    {
      id: "post-construction",
      title: "D·ªçn Sau X√¢y D·ª±ng",
      description: "D·ªçn d·∫πp chuy√™n s√¢u sau khi s·ª≠a ch·ªØa, x√¢y d·ª±ng ho·∫∑c c·∫£i t·∫°o nh√† c·ª≠a",
      icon: "üî®",
      gradient: "from-orange-500 to-red-400",
      price: "800.000ƒë - 2.000.000ƒë",
      duration: "4-8 gi·ªù",
      features: [
        "D·ªçn d·∫πp b·ª•i b·∫©n, m·∫£nh v·ª•n x√¢y d·ª±ng",
        "Lau ch√πi t∆∞·ªùng, tr·∫ßn nh√†",
        "V·ªá sinh c·ª≠a s·ªï, c·ª≠a ra v√†o",
        "L√†m s·∫°ch s√†n nh√†, g·∫°ch ·ªëp",
        "Ki·ªÉm tra v√† d·ªçn d·∫πp to√†n di·ªán",
      ],
    },
    {
      id: "year-end",
      title: "D·ªçn Cu·ªëi NƒÉm",
      description: "D·ªçn d·∫πp t·ªïng th·ªÉ, chu·∫©n b·ªã ƒë√≥n T·∫øt Nguy√™n ƒê√°n m·ªôt c√°ch tr·ªçn v·∫πn",
      icon: "üéä",
      gradient: "from-green-500 to-emerald-400",
      price: "600.000ƒë - 1.500.000ƒë",
      duration: "4-6 gi·ªù",
      features: [
        "D·ªçn d·∫πp t·ªïng th·ªÉ to√†n b·ªô ng√¥i nh√†",
        "V·ªá sinh k·ªπ l∆∞·ª°ng m·ªçi g√≥c nh√†",
        "Lau ch√πi ƒë·ªì ƒë·∫°c, trang tr√≠",
        "S·∫Øp x·∫øp l·∫°i kh√¥ng gian s·ªëng",
        "Chu·∫©n b·ªã ƒë√≥n nƒÉm m·ªõi",
      ],
    },
  ]

  const whyChooseUs = [
    {
      icon: Users,
      title: "ƒê·ªôi Ng≈© Chuy√™n Nghi·ªáp",
      description: "Nh√¢n vi√™n ƒë∆∞·ª£c ƒë√†o t·∫°o b√†i b·∫£n, c√≥ kinh nghi·ªám l√¢u nƒÉm trong lƒ©nh v·ª±c d·ªçn v·ªá sinh",
      color: "text-blue-600",
      bgColor: "bg-blue-100",
    },
    {
      icon: CheckCircle,
      title: "Cam K·∫øt Ch·∫•t L∆∞·ª£ng",
      description: "ƒê·∫£m b·∫£o ch·∫•t l∆∞·ª£ng d·ªãch v·ª• 100%, ho√†n ti·ªÅn n·∫øu kh√¥ng h√†i l√≤ng",
      color: "text-green-600",
      bgColor: "bg-green-100",
    },
    {
      icon: Clock,
      title: "Linh Ho·∫°t Th·ªùi Gian",
      description: "Ph·ª•c v·ª• 7 ng√†y trong tu·∫ßn, c√≥ th·ªÉ ƒë·∫∑t l·ªãch theo y√™u c·∫ßu c·ªßa kh√°ch h√†ng",
      color: "text-purple-600",
      bgColor: "bg-purple-100",
    },
    {
      icon: Star,
      title: "ƒê√°nh Gi√° Cao",
      description: "ƒê∆∞·ª£c h√†ng ngh√¨n kh√°ch h√†ng tin t∆∞·ªüng v·ªõi ƒë√°nh gi√° 4.9/5 sao",
      color: "text-yellow-600",
      bgColor: "bg-yellow-100",
    },
  ]

  const process = [
    {
      step: "1",
      title: "ƒê·∫∑t L·ªãch Online",
      description: "Ch·ªçn d·ªãch v·ª• v√† th·ªùi gian ph√π h·ª£p tr√™n website",
      color: "from-blue-500 to-cyan-400",
    },
    {
      step: "2",
      title: "X√°c Nh·∫≠n Th√¥ng Tin",
      description: "Nh√¢n vi√™n li√™n h·ªá x√°c nh·∫≠n chi ti·∫øt v√† th·ªùi gian",
      color: "from-green-500 to-emerald-400",
    },
    {
      step: "3",
      title: "Th·ª±c Hi·ªán D·ªãch V·ª•",
      description: "ƒê·ªôi ng≈© chuy√™n nghi·ªáp ƒë·∫øn v√† th·ª±c hi·ªán c√¥ng vi·ªác",
      color: "from-yellow-500 to-orange-400",
    },
    {
      step: "4",
      title: "Ho√†n Th√†nh & Thanh To√°n",
      description: "Ki·ªÉm tra ch·∫•t l∆∞·ª£ng, thanh to√°n v√† ƒë√°nh gi√° d·ªãch v·ª•",
      color: "from-purple-500 to-pink-400",
    },
  ]

  return (
    <div className="min-h-screen bg-gradient-to-br from-indigo-50 via-white to-cyan-50">
      <Header />

      {/* Hero Section */}
      <section className="pt-20 pb-16 px-4">
        <div className="max-w-7xl mx-auto text-center">
          <div className="w-20 h-20 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg">
            <Heart className="w-10 h-10 text-white" />
          </div>

          <Badge className="mb-6 bg-gradient-to-r from-blue-600 to-purple-600 text-white hover:from-blue-700 hover:to-purple-700 px-6 py-2 text-sm font-medium">
            <Sparkles className="w-4 h-4 mr-2" />
            D·ªãch v·ª• ƒëa d·∫°ng & chuy√™n nghi·ªáp
          </Badge>

          <h1 className="text-5xl md:text-6xl font-bold mb-6">
            <span className="bg-gradient-to-r from-gray-900 via-blue-900 to-purple-900 bg-clip-text text-transparent">
              D·ªãch V·ª• C·ªßa
            </span>
            <br />
            <span className="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">CareU</span>
          </h1>

          <p className="text-xl md:text-2xl text-gray-600 mb-10 max-w-4xl mx-auto leading-relaxed">
            ƒêa d·∫°ng d·ªãch v·ª• d·ªçn v·ªá sinh chuy√™n nghi·ªáp, ph√π h·ª£p v·ªõi m·ªçi nhu c·∫ßu c·ªßa b·∫°n
          </p>

          <Button
            asChild
            size="lg"
            className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white text-lg px-10 py-6 rounded-full shadow-lg hover:shadow-xl transition-all duration-300"
          >
            <Link href="/booking">
              <Sparkles className="w-5 h-5 mr-2" />
              ƒê·∫∑t L·ªãch Ngay
            </Link>
          </Button>
        </div>
      </section>

      {/* Services Grid */}
      <section className="py-20 px-4 bg-white">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-16">
            <h2 className="text-4xl md:text-5xl font-bold mb-6">
              <span className="bg-gradient-to-r from-gray-900 to-blue-900 bg-clip-text text-transparent">
                C√°c D·ªãch V·ª• C·ªßa Ch√∫ng T√¥i
              </span>
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">L·ª±a ch·ªçn d·ªãch v·ª• ph√π h·ª£p v·ªõi nhu c·∫ßu c·ªßa b·∫°n</p>
          </div>

          <div className="grid md:grid-cols-2 gap-8">
            {services.map((service, index) => (
              <Card
                key={service.id}
                className="hover:shadow-xl transition-all duration-300 border-0 overflow-hidden group relative"
              >
                {service.popular && (
                  <div className="absolute top-4 right-4 z-10">
                    <Badge className="bg-gradient-to-r from-yellow-500 to-orange-400 text-white">Ph·ªï bi·∫øn</Badge>
                  </div>
                )}
                <div className={`h-2 bg-gradient-to-r ${service.gradient}`}></div>
                <CardHeader className="pb-4">
                  <div className="flex items-center mb-4">
                    <div className="text-4xl mr-4 group-hover:scale-110 transition-transform duration-300">
                      {service.icon}
                    </div>
                    <div>
                      <CardTitle className="text-2xl mb-2">{service.title}</CardTitle>
                      <CardDescription className="text-base">{service.description}</CardDescription>
                    </div>
                  </div>

                  <div className="flex justify-between items-center mb-4">
                    <div>
                      <span className="text-sm text-gray-500">Gi√° t·ª´:</span>
                      <div className="font-bold text-blue-600 text-lg">{service.price}</div>
                    </div>
                    <div>
                      <span className="text-sm text-gray-500">Th·ªùi gian:</span>
                      <div className="font-medium">{service.duration}</div>
                    </div>
                  </div>
                </CardHeader>

                <CardContent>
                  <div className="space-y-3 mb-6">
                    <h4 className="font-semibold text-gray-900">Bao g·ªìm:</h4>
                    {service.features.map((feature, idx) => (
                      <div key={idx} className="flex items-center text-sm text-gray-600">
                        <CheckCircle className="w-4 h-4 text-green-500 mr-2 flex-shrink-0" />
                        {feature}
                      </div>
                    ))}
                  </div>

                  <Button
                    asChild
                    className="w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700"
                  >
                    <Link href="/booking">
                      ƒê·∫∑t L·ªãch Ngay
                      <ArrowRight className="w-4 h-4 ml-2" />
                    </Link>
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Why Choose Us */}
      <section className="py-20 px-4 bg-gradient-to-br from-gray-50 to-blue-50">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-16">
            <h2 className="text-4xl md:text-5xl font-bold mb-6">
              <span className="bg-gradient-to-r from-gray-900 to-purple-900 bg-clip-text text-transparent">
                T·∫°i Sao Ch·ªçn CareU?
              </span>
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              Nh·ªØng l√Ω do khi·∫øn h√†ng ngh√¨n kh√°ch h√†ng tin t∆∞·ªüng l·ª±a ch·ªçn ch√∫ng t√¥i
            </p>
          </div>

          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
            {whyChooseUs.map((item, index) => (
              <Card
                key={index}
                className="text-center p-8 hover:shadow-xl transition-all duration-300 border-0 bg-white/80 backdrop-blur-sm"
              >
                <CardContent className="pt-6">
                  <div
                    className={`w-16 h-16 ${item.bgColor} rounded-full flex items-center justify-center mx-auto mb-6`}
                  >
                    <item.icon className={`w-8 h-8 ${item.color}`} />
                  </div>
                  <h3 className="text-xl font-semibold mb-3">{item.title}</h3>
                  <p className="text-gray-600 leading-relaxed">{item.description}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Process */}
      <section className="py-20 px-4 bg-white">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-16">
            <h2 className="text-4xl md:text-5xl font-bold mb-6">
              <span className="bg-gradient-to-r from-gray-900 to-green-900 bg-clip-text text-transparent">
                Quy Tr√¨nh L√†m Vi·ªác
              </span>
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">Quy tr√¨nh ƒë∆°n gi·∫£n, minh b·∫°ch v√† chuy√™n nghi·ªáp</p>
          </div>

          <div className="grid md:grid-cols-4 gap-8">
            {process.map((item, index) => (
              <div key={index} className="text-center group">
                <div
                  className={`w-20 h-20 bg-gradient-to-r ${item.color} rounded-full flex items-center justify-center mx-auto mb-6 group-hover:scale-110 transition-transform duration-300 shadow-lg`}
                >
                  <span className="text-3xl font-bold text-white">{item.step}</span>
                </div>
                <h3 className="text-xl font-semibold mb-3">{item.title}</h3>
                <p className="text-gray-600 leading-relaxed">{item.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* CTA */}
      <section className="py-20 px-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white">
        <div className="max-w-4xl mx-auto text-center">
          <h2 className="text-4xl md:text-5xl font-bold mb-6">S·∫µn S√†ng Tr·∫£i Nghi·ªám?</h2>
          <p className="text-xl md:text-2xl mb-10 opacity-90">
            ƒê·∫∑t l·ªãch ngay h√¥m nay v√† ƒë·ªÉ CareU chƒÉm s√≥c ng√¥i nh√† c·ªßa b·∫°n
          </p>
          <div className="flex flex-col sm:flex-row gap-6 justify-center">
            <Button
              asChild
              size="lg"
              className="bg-white text-blue-600 hover:bg-gray-100 text-lg px-10 py-6 rounded-full shadow-lg hover:shadow-xl transition-all duration-300"
            >
              <Link href="/booking">
                <Sparkles className="w-5 h-5 mr-2" />
                ƒê·∫∑t L·ªãch Ngay
              </Link>
            </Button>
            <Button
              asChild
              variant="outline"
              size="lg"
              className="border-2 border-white text-white hover:bg-white hover:text-blue-600 text-lg px-10 py-6 rounded-full transition-all duration-300"
            >
              <Link href="/about">
                T√¨m Hi·ªÉu Th√™m
                <ArrowRight className="w-5 h-5 ml-2" />
              </Link>
            </Button>
          </div>
        </div>
      </section>

      <Footer />
    </div>
  )
}
